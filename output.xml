<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20131009 21:19:37.432" generator="Robot 2.8.1 (Python 2.7.2 on darwin)">
<suite source="/Users/bkeown/Dropbox/code/github.com/theqabalist/coconuts" id="s1" name="Coconuts">
<suite source="/Users/bkeown/Dropbox/code/github.com/theqabalist/coconuts/accept.txt" id="s1-s1" name="Accept">
<test id="s1-s1-t1" name="Full Game No Strikes No Spares">
<kw type="kw" name="When I bowl &quot;(9 0 9 0 9 0 9 0 9 0 9 0 9 0 9 0 9 0 9 0)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:38.499" level="INFO">${bowled} = 90</msg>
<status status="PASS" endtime="20131009 21:19:38.499" starttime="20131009 21:19:37.466"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:38.500" level="INFO">${bowled} = 90</msg>
<status status="PASS" endtime="20131009 21:19:38.501" starttime="20131009 21:19:38.500"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:38.501" starttime="20131009 21:19:37.465"></status>
</kw>
<kw type="kw" name="Then I should score a 90">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:38.502" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:38.502" starttime="20131009 21:19:38.502"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:38.503" starttime="20131009 21:19:38.501"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:38.503" critical="yes" starttime="20131009 21:19:37.464"></status>
</test>
<test id="s1-s1-t2" name="Full Game No Strikes No Spares, Alternate Score">
<kw type="kw" name="When I bowl &quot;(4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:39.546" level="INFO">${bowled} = 70</msg>
<status status="PASS" endtime="20131009 21:19:39.546" starttime="20131009 21:19:38.505"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:39.547" level="INFO">${bowled} = 70</msg>
<status status="PASS" endtime="20131009 21:19:39.547" starttime="20131009 21:19:39.547"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:39.547" starttime="20131009 21:19:38.504"></status>
</kw>
<kw type="kw" name="Then I should score a 70">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:39.548" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:39.549" starttime="20131009 21:19:39.548"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:39.549" starttime="20131009 21:19:39.548"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:39.549" critical="yes" starttime="20131009 21:19:38.503"></status>
</test>
<test id="s1-s1-t3" name="Full Game No Strikes, Spares">
<kw type="kw" name="When I bowl &quot;(4 6 5 5 9 0 4 6 5 5 9 0 1 1 1 1 1 1 1 1)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:40.602" level="INFO">${bowled} = 94</msg>
<status status="PASS" endtime="20131009 21:19:40.601" starttime="20131009 21:19:39.550"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:40.603" level="INFO">${bowled} = 94</msg>
<status status="PASS" endtime="20131009 21:19:40.603" starttime="20131009 21:19:40.602"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:40.603" starttime="20131009 21:19:39.550"></status>
</kw>
<kw type="kw" name="Then I should score a 94">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:40.605" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:40.605" starttime="20131009 21:19:40.604"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:40.605" starttime="20131009 21:19:40.604"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:40.605" critical="yes" starttime="20131009 21:19:39.549"></status>
</test>
<test id="s1-s1-t4" name="Full Game Strikes, No Doubles, No Spares">
<kw type="kw" name="When I bowl &quot;(10 5 4 10 3 4 10 1 2 10 9 0 9 0 8 1)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:41.620" level="INFO">${bowled} = 114</msg>
<status status="PASS" endtime="20131009 21:19:41.620" starttime="20131009 21:19:40.607"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:41.621" level="INFO">${bowled} = 114</msg>
<status status="PASS" endtime="20131009 21:19:41.621" starttime="20131009 21:19:41.621"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:41.621" starttime="20131009 21:19:40.607"></status>
</kw>
<kw type="kw" name="Then I should score a 114">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:41.623" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:41.623" starttime="20131009 21:19:41.622"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:41.623" starttime="20131009 21:19:41.622"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:41.623" critical="yes" starttime="20131009 21:19:40.606"></status>
</test>
<test id="s1-s1-t5" name="Full Game Strikes, Multi Strikes, Spares">
<kw type="kw" name="When I bowl &quot;(10 9 1 8 1 7 1 10 10 10 9 1 8 2 9 0)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:42.659" level="INFO">${bowled} = 180</msg>
<status status="PASS" endtime="20131009 21:19:42.658" starttime="20131009 21:19:41.625"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:42.660" level="INFO">${bowled} = 180</msg>
<status status="PASS" endtime="20131009 21:19:42.660" starttime="20131009 21:19:42.659"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:42.660" starttime="20131009 21:19:41.624"></status>
</kw>
<kw type="kw" name="Then I should score a 180">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:42.662" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:42.662" starttime="20131009 21:19:42.661"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:42.662" starttime="20131009 21:19:42.661"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:42.662" critical="yes" starttime="20131009 21:19:41.623"></status>
</test>
<test id="s1-s1-t6" name="Full Game Irregular 10th Frame, Spare">
<kw type="kw" name="When I bowl &quot;(10 9 1 8 1 7 1 10 10 10 9 1 8 2 9 1 2)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:43.702" level="INFO">${bowled} = 183</msg>
<status status="PASS" endtime="20131009 21:19:43.701" starttime="20131009 21:19:42.664"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:43.702" level="INFO">${bowled} = 183</msg>
<status status="PASS" endtime="20131009 21:19:43.703" starttime="20131009 21:19:43.702"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:43.703" starttime="20131009 21:19:42.664"></status>
</kw>
<kw type="kw" name="Then I should score a 183">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:43.704" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:43.704" starttime="20131009 21:19:43.704"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:43.704" starttime="20131009 21:19:43.703"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:43.704" critical="yes" starttime="20131009 21:19:42.663"></status>
</test>
<test id="s1-s1-t7" name="Perfect Game">
<kw type="kw" name="When I bowl &quot;(10 10 10 10 10 10 10 10 10 10 10 10)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:44.743" level="INFO">${bowled} = 300</msg>
<status status="PASS" endtime="20131009 21:19:44.742" starttime="20131009 21:19:43.706"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:44.744" level="INFO">${bowled} = 300</msg>
<status status="PASS" endtime="20131009 21:19:44.744" starttime="20131009 21:19:44.743"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:44.744" starttime="20131009 21:19:43.705"></status>
</kw>
<kw type="kw" name="Then I should score a 300">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:44.746" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:44.746" starttime="20131009 21:19:44.745"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:44.746" starttime="20131009 21:19:44.745"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:44.746" critical="yes" starttime="20131009 21:19:43.705"></status>
</test>
<test id="s1-s1-t8" name="Partial Game, No Strikes/Spares in Most Current Throw">
<kw type="kw" name="When I bowl &quot;(5 4 3 4)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:45.768" level="INFO">${bowled} = 16</msg>
<status status="PASS" endtime="20131009 21:19:45.768" starttime="20131009 21:19:44.748"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:45.769" level="INFO">${bowled} = 16</msg>
<status status="PASS" endtime="20131009 21:19:45.769" starttime="20131009 21:19:45.769"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:45.769" starttime="20131009 21:19:44.748"></status>
</kw>
<kw type="kw" name="Then I should score a 16">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:45.770" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:45.771" starttime="20131009 21:19:45.770"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:45.771" starttime="20131009 21:19:45.770"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:45.771" critical="yes" starttime="20131009 21:19:44.747"></status>
</test>
<test id="s1-s1-t9" name="Partial Game, No Strikes, Spare at the End">
<kw type="kw" name="When I bowl &quot;(5 5 4 6)&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Bowl">
<doc></doc>
<arguments>
<arg>${struct_as_string}</arg>
</arguments>
<msg timestamp="20131009 21:19:46.814" level="INFO">${bowled} = 24</msg>
<status status="PASS" endtime="20131009 21:19:46.814" starttime="20131009 21:19:45.772"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${bowled}</arg>
</arguments>
<msg timestamp="20131009 21:19:46.815" level="INFO">${bowled} = 24</msg>
<status status="PASS" endtime="20131009 21:19:46.815" starttime="20131009 21:19:46.815"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:46.815" starttime="20131009 21:19:45.772"></status>
</kw>
<kw type="kw" name="Then I should score a 24">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bowled}</arg>
<arg>${score}</arg>
</arguments>
<msg timestamp="20131009 21:19:46.817" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20131009 21:19:46.817" starttime="20131009 21:19:46.816"></status>
</kw>
<status status="PASS" endtime="20131009 21:19:46.817" starttime="20131009 21:19:46.816"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131009 21:19:46.817" critical="yes" starttime="20131009 21:19:45.771"></status>
</test>
<test id="s1-s1-t10" name="Incremental Game">
<kw type="kw" name="When I incrementally bowl &quot;10 9 1 8 1 7 1 10 10 10 9 1 8 2 9 1 2 ^C&quot;">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${bowled} = proc.Inc Bowl">
<doc></doc>
<arguments>
<arg>${items}</arg>
</arguments>
<msg timestamp="20131009 21:19:47.896" level="FAIL">AssertionError</msg>
<status status="FAIL" endtime="20131009 21:19:47.896" starttime="20131009 21:19:46.819"></status>
</kw>
<status status="FAIL" endtime="20131009 21:19:47.897" starttime="20131009 21:19:46.818"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="FAIL" endtime="20131009 21:19:47.897" critical="yes" starttime="20131009 21:19:46.817">AssertionError</status>
</test>
<doc></doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20131009 21:19:47.899" starttime="20131009 21:19:37.458"></status>
</suite>
<doc></doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20131009 21:19:47.904" starttime="20131009 21:19:37.433"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="9">Critical Tests</stat>
<stat fail="1" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" pass="9" id="s1" name="Coconuts">Coconuts</stat>
<stat fail="1" pass="9" id="s1-s1" name="Accept">Coconuts.Accept</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
